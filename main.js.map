{"version":3,"sources":["./src/app/modules/core/guards/import.guard.ts","./src/app/modules/core/core.module.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/app.state.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\r\nexport function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\r\n    if (parentModule) {\r\n       throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\r\n    }\r\n }","import { CommonModule } from '@angular/common';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { throwIfAlreadyLoaded } from './guards/import.guard';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CommonModule\n  ]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule:CoreModule){\n    throwIfAlreadyLoaded(parentModule, 'CoreModule');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'my-weather-map';\r\n}\r\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { NgxsDispatchPluginModule } from '@ngxs-labs/dispatch-decorator';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AppState } from './app.state';\r\nimport { CoreModule } from './modules/core/core.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,   \r\n    CoreModule, \r\n    NgxsModule.forRoot([AppState],{\r\n      developmentMode: !environment.production\r\n    }),\r\n    NgxsDispatchPluginModule.forRoot()\r\n  ],\r\n  providers:[],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { \r\n    path: 'weather', \r\n    loadChildren: () => import('./modules/weather/weather.module')\r\n    .then(m => m.WeatherModule) \r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: '/weather',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,{relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Injectable } from \"@angular/core\";\r\nimport { State } from \"@ngxs/store\";\r\n\r\n@State<any>({\r\n    name:'app',\r\n    defaults:{}\r\n})\r\n@Injectable()\r\nexport class AppState {}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}